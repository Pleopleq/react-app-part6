{"ast":null,"code":"var _jsxFileName = \"/home/pleq/Documents/learningReact/part6/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst PrintNumbers = ({\n  contact,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }\n  }, \" \", contact);\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    name: 'Felix Anducho',\n    number: '453929392'\n  }]);\n  const [newName, setNewName] = useState('a new note...');\n  const [newPhoneNum, setNewPhoneNum] = useState('Phone number');\n\n  const handleContactChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhoneNum(event.target.value);\n  };\n\n  const AddNumber = event => {\n    event.preventDefault();\n    const contactObj = {\n      name: newName\n    };\n    const onlyNames = persons.map(nameArr => nameArr.name);\n\n    if (onlyNames.indexOf(newName) > -1) {\n      alert(`${newName} is already register`);\n      return;\n    } else {\n      setPersons(persons.concat(contactObj));\n      setNewName('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: AddNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newName,\n    onChange: handleContactChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }), \"phone: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newPhoneNum,\n    onChange: handlePhoneChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, persons.map((person, index) => /*#__PURE__*/React.createElement(PrintNumbers, {\n    key: index,\n    contact: person.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"debug: \", newName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"debug: \", newPhoneNum)));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/home/pleq/Documents/learningReact/part6/src/index.js"],"names":["React","useState","ReactDOM","PrintNumbers","contact","index","App","persons","setPersons","name","number","newName","setNewName","newPhoneNum","setNewPhoneNum","handleContactChange","event","target","value","handlePhoneChange","AddNumber","preventDefault","contactObj","onlyNames","map","nameArr","indexOf","alert","concat","person","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport ReactDOM from 'react-dom'\n\nconst PrintNumbers = ({contact, index}) =>{\n    return <li key={index}> {contact}</li>\n}\n\n\nconst App = () =>{\n\n    const [persons, setPersons] = useState([\n        { name: 'Felix Anducho', number: '453929392' }\n    ]);\n    const [ newName, setNewName ] = useState( \n        'a new note...'\n    );\n    const [ newPhoneNum, setNewPhoneNum ] = useState(\n        'Phone number'\n    )\n\n\n    const handleContactChange = event =>{\n        setNewName(event.target.value);\n    }\n\n    const handlePhoneChange =  event =>{\n        setNewPhoneNum(event.target.value);\n    }\n\n    const AddNumber = (event) =>{\n        event.preventDefault();\n\n        const contactObj = {\n            name: newName\n        }\n\n        const onlyNames = persons.map(nameArr => nameArr.name);\n\n        if(onlyNames.indexOf(newName) > -1){\n            alert (`${newName} is already register`);\n            return\n        } else {\n            setPersons(persons.concat(contactObj));\n            setNewName('');\n        }\n    }\n\n\n    return(\n        <div>\n            <h2>Phonebook</h2>\n            <form onSubmit={AddNumber}> \n                <div>\n                    name: <input value={newName}\n                        onChange={handleContactChange}\n                    />\n                    phone: <input value={newPhoneNum}\n                        onChange={handlePhoneChange}\n                    />\n                </div>\n                <div>\n                    <button type='submit'>Add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            <ul>\n                {persons.map((person, index)=>\n                <PrintNumbers key={index} contact={person.name}/>\n                )}\n                <div>debug: {newName}</div>\n                <div>debug: {newPhoneNum}</div>\n            </ul>\n        </div>\n    )\n}\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}