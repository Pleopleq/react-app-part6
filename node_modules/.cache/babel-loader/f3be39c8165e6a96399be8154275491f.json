{"ast":null,"code":"var _jsxFileName = \"/home/pleq/Documents/learningReact/part6/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport personService from './services/persons';\nimport PrintNumbers from './components/PrintNumbers';\nimport SearchBar from './components/SearchBar';\nimport ContactForm from './components/ContactForm';\n\nconst Notification = ({\n  message\n}) => {};\n\nconst App = () => {\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newPhoneNum, setNewPhoneNum] = useState(''); //Search bar//\n\n  let contactsToShow = persons;\n  const searchQuery = newFilter;\n  const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n  const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n  contactsToShow = filterPersons; //Search bar //\n\n  const handleContactChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhoneNum(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const handleDeleteButton = event => {\n    const contactSelected = event.target.id;\n    const filteredContact = personService.getOneById(contactSelected, persons);\n    const result = window.confirm(`Are you sure you want to delete ${filteredContact[0].name}`);\n\n    if (result) {\n      personService.deleteContact(filteredContact[0].id).then(response => {\n        personService.getAll().then(response => {\n          setPersons(response.data);\n        });\n      });\n    }\n  };\n\n  const AddNumber = event => {\n    event.preventDefault();\n    const newContactObj = {\n      name: newName,\n      number: newPhoneNum\n    };\n    const onlyNames = persons.map(nameArr => nameArr.name);\n\n    if (onlyNames.indexOf(newName) > -1) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n\n      if (result) {\n        const replaceOld = persons.filter(person => person.name === newName);\n        personService.updateContact(replaceOld[0].id, newContactObj).then(response => {\n          personService.getAll().then(response => {\n            setPersons(response.data);\n            setNewName('');\n            setNewPhoneNum('');\n          });\n        });\n      }\n    } else {\n      personService.create(newContactObj).then(response => {\n        setPersons(persons.concat(response.data));\n        setNewName('');\n        setNewPhoneNum('');\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(SearchBar, {\n    value: newFilter,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Add a new contact\"), /*#__PURE__*/React.createElement(ContactForm, {\n    valueName: newName,\n    onChangeName: handleContactChange,\n    valueNumber: newPhoneNum,\n    onChangeNum: handlePhoneChange,\n    onSubmit: AddNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, contactsToShow.map((person, index) => /*#__PURE__*/React.createElement(PrintNumbers, {\n    contact: person.name,\n    phone: person.number,\n    onClick: handleDeleteButton,\n    key: index,\n    id: person.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }))));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/home/pleq/Documents/learningReact/part6/src/index.js"],"names":["React","useState","useEffect","ReactDOM","personService","PrintNumbers","SearchBar","ContactForm","Notification","message","App","getAll","then","response","setPersons","data","persons","newFilter","setNewFilter","newName","setNewName","newPhoneNum","setNewPhoneNum","contactsToShow","searchQuery","searchQueryToUpper","charAt","toUpperCase","substring","filterPersons","filter","el","name","includes","handleContactChange","event","target","value","handlePhoneChange","handleFilterChange","handleDeleteButton","contactSelected","id","filteredContact","getOneById","result","window","confirm","deleteContact","AddNumber","preventDefault","newContactObj","number","onlyNames","map","nameArr","indexOf","replaceOld","person","updateContact","create","concat","index","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport personService from './services/persons'\nimport PrintNumbers from './components/PrintNumbers'\nimport SearchBar from './components/SearchBar'\nimport ContactForm from './components/ContactForm'\n\nconst Notification = ({message}) => {\n\n}\n\nconst App = () =>{\n\n   useEffect(() =>{\n    personService\n       .getAll()\n       .then(response => {\n        setPersons(response.data);\n       })\n   }, [])\n    const [ persons, setPersons] = useState([]);\n    const [ newFilter , setNewFilter] = useState('');\n    const [ newName, setNewName] = useState('');\n    const [ newPhoneNum, setNewPhoneNum] = useState('');\n\n    //Search bar//\n\n    let contactsToShow = persons;\n    const searchQuery = newFilter;\n    const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n\n    const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n    contactsToShow = filterPersons;\n\n    //Search bar //\n\n    const handleContactChange = event =>{\n        setNewName(event.target.value);\n    }\n\n    const handlePhoneChange =  event =>{\n        setNewPhoneNum(event.target.value);\n    }\n\n    const handleFilterChange = event =>{\n        setNewFilter(event.target.value);\n    }\n\n    const handleDeleteButton = (event) =>{\n        const contactSelected = event.target.id;\n        const filteredContact = personService.getOneById(contactSelected, persons)\n        const result = window.confirm(`Are you sure you want to delete ${filteredContact[0].name}`)\n            if(result){\n                personService\n                .deleteContact(filteredContact[0].id)\n                .then(response =>{\n                    personService\n                    .getAll()\n                    .then(response => {\n                     setPersons(response.data);\n                    })\n            })\n        }\n    }\n    \n\n    const AddNumber = (event) =>{\n        event.preventDefault();\n\n        const newContactObj = {\n            name: newName,\n            number: newPhoneNum\n        }\n\n        const onlyNames = persons.map(nameArr => nameArr.name);\n\n        if(onlyNames.indexOf(newName) > -1 ){\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            if(result){\n                const replaceOld = persons.filter(person => person.name === newName);\n                personService\n                .updateContact(replaceOld[0].id, newContactObj)\n                .then(response =>{\n                        personService\n                        .getAll()\n                        .then(response => {\n                        setPersons(response.data);\n                        setNewName('');\n                        setNewPhoneNum('');\n                    })\n                })\n            }\n        } else {\n            personService\n            .create(newContactObj)\n            .then(response =>{\n                setPersons(persons.concat(response.data));\n                setNewName('');\n                setNewPhoneNum('');\n            })\n        }\n    }\n\n    return(\n        <div>\n            <h1>Phonebook</h1>\n            <SearchBar value={newFilter} onChange={handleFilterChange}/>\n\n            <h2>Add a new contact</h2>\n            \n            <ContactForm valueName={newName} \n            onChangeName={handleContactChange}\n            valueNumber={newPhoneNum}\n            onChangeNum={handlePhoneChange}\n            onSubmit={AddNumber}/>\n\n            <h2>Numbers</h2>\n            <ul>\n                {contactsToShow.map((person, index)=>\n                <PrintNumbers contact={person.name} phone={person.number} onClick={handleDeleteButton} key={index} id={person.id}/>\n            )}\n            </ul>\n        </div>\n    )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}