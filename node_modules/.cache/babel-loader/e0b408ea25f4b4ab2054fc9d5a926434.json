{"ast":null,"code":"var _jsxFileName = \"/home/pleq/Documents/learningReact/part6/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport personService from './services/persons';\nimport PrintNumbers from './components/PrintNumbers';\nimport SearchBar from './components/SearchBar';\nimport ContactForm from './components/ContactForm';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  useEffect(() => {\n    personService.getAll().then(response => {\n      console.log('Promise fulfilled!');\n      setPersons(response.data);\n    });\n  }, []);\n  const [newFilter, setNewFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newPhoneNum, setNewPhoneNum] = useState(''); //Search bar//\n\n  let contactsToShow = persons;\n  const searchQuery = newFilter;\n  const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n  const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n  contactsToShow = filterPersons; //Search bar //\n\n  const handleContactChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhoneNum(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const handleDeleteButton = event => {\n    console.log(event.target.id);\n    personService.getAll().then(response => {\n      // const id = response.data.map(person => person.id)\n      console.log(response.data);\n    });\n  };\n\n  const AddNumber = event => {\n    event.preventDefault();\n    const newContactObj = {\n      name: newName,\n      number: newPhoneNum\n    };\n    const onlyNames = persons.map(nameArr => nameArr.name);\n\n    if (onlyNames.indexOf(newName) > -1) {\n      alert(`${newName} is already register`);\n      return;\n    } else {\n      personService.create(newContactObj).then(response => {\n        setPersons(persons.concat(response.data));\n        setNewName('');\n        setNewPhoneNum('');\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(SearchBar, {\n    value: newFilter,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Add a new contact\"), /*#__PURE__*/React.createElement(ContactForm, {\n    valueName: newName,\n    onChangeName: handleContactChange,\n    valueNumber: newPhoneNum,\n    onChangeNum: handlePhoneChange,\n    onSubmit: AddNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, contactsToShow.map((person, index) => /*#__PURE__*/React.createElement(PrintNumbers, {\n    key: index,\n    contact: person.name,\n    phone: person.number,\n    onClick: handleDeleteButton,\n    id: person.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }))));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/home/pleq/Documents/learningReact/part6/src/index.js"],"names":["React","useState","useEffect","ReactDOM","personService","PrintNumbers","SearchBar","ContactForm","App","persons","setPersons","getAll","then","response","console","log","data","newFilter","setNewFilter","newName","setNewName","newPhoneNum","setNewPhoneNum","contactsToShow","searchQuery","searchQueryToUpper","charAt","toUpperCase","substring","filterPersons","filter","el","name","includes","handleContactChange","event","target","value","handlePhoneChange","handleFilterChange","handleDeleteButton","id","AddNumber","preventDefault","newContactObj","number","onlyNames","map","nameArr","indexOf","alert","create","concat","person","index","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport PrintNumbers from './components/PrintNumbers'\nimport SearchBar from './components/SearchBar'\nimport ContactForm from './components/ContactForm'\n\nconst App = () =>{\n\n   const [persons, setPersons] = useState([]);\n\n   useEffect(() =>{\n       personService\n       .getAll()\n       .then(response => {\n           console.log('Promise fulfilled!')\n           setPersons(response.data);\n       })\n   }, [])\n\n    const [newFilter , setNewFilter ] = useState('');\n\n    const [ newName, setNewName ] = useState('');\n\n    const [ newPhoneNum, setNewPhoneNum ] = useState('');\n    //Search bar//\n\n    let contactsToShow = persons;\n    const searchQuery = newFilter;\n    const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n\n    const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n    contactsToShow = filterPersons;\n\n    //Search bar //\n\n    const handleContactChange = event =>{\n        setNewName(event.target.value);\n    }\n\n    const handlePhoneChange =  event =>{\n        setNewPhoneNum(event.target.value);\n    }\n\n    const handleFilterChange = event =>{\n     setNewFilter(event.target.value);\n     }\n    \n    const handleDeleteButton = (event) =>{\n        console.log(event.target.id)\n\n        personService\n        .getAll()\n        .then(response =>{\n            // const id = response.data.map(person => person.id)\n            console.log(response.data)\n\n        })\n    }\n    \n\n    const AddNumber = (event) =>{\n        event.preventDefault();\n\n        const newContactObj = {\n            name: newName,\n            number: newPhoneNum\n        }\n\n        const onlyNames = persons.map(nameArr => nameArr.name);\n\n        if(onlyNames.indexOf(newName) > -1 ){\n            alert (`${newName} is already register`);\n            return\n        } else {\n            personService\n            .create(newContactObj)\n            .then(response =>{\n                setPersons(persons.concat(response.data));\n                setNewName('');\n                setNewPhoneNum('');\n            })\n        }\n    }\n\n\n    return(\n        <div>\n            <h1>Phonebook</h1>\n            <SearchBar value={newFilter} onChange={handleFilterChange}/>\n\n            <h2>Add a new contact</h2>\n            \n            <ContactForm valueName={newName} \n            onChangeName={handleContactChange}\n            valueNumber={newPhoneNum}\n            onChangeNum={handlePhoneChange}\n            onSubmit={AddNumber}/>\n\n            <h2>Numbers</h2>\n            <ul>\n                {contactsToShow.map((person, index)=>\n                <PrintNumbers key={index} contact={person.name} phone={person.number} onClick={handleDeleteButton} id={person.id}/>\n            )}\n            </ul>\n        </div>\n    )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}