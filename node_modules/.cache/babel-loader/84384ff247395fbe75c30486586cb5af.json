{"ast":null,"code":"var _jsxFileName = \"/home/pleq/Documents/learningReact/part6/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport personService from './services/persons';\nimport PrintNumbers from './components/PrintNumbers';\nimport SearchBar from './components/SearchBar';\nimport ContactForm from './components/ContactForm';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n  const [newFilter, setNewFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newPhoneNum, setNewPhoneNum] = useState('');\n  const [newList, setNewList] = useState([]); //Search bar//\n\n  let contactsToShow = persons;\n  const searchQuery = newFilter;\n  const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n  const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n  contactsToShow = filterPersons; //Search bar //\n\n  const handleContactChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhoneNum(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const handleDeleteButton = event => {\n    setNewList(event.target);\n  };\n\n  console.log(newList);\n\n  const AddNumber = event => {\n    event.preventDefault();\n    const newContactObj = {\n      name: newName,\n      number: newPhoneNum\n    };\n    const onlyNames = persons.map(nameArr => nameArr.name);\n\n    if (onlyNames.indexOf(newName) > -1) {\n      alert(`${newName} is already register`);\n      return;\n    } else {\n      personService.create(newContactObj).then(response => {\n        setPersons(persons.concat(response.data));\n        setNewName('');\n        setNewPhoneNum('');\n      });\n    }\n  };\n\n  const removeNumber = () => {\n    const deletedId = newList.id;\n    const deletedName = newList.parentElement.childNodes[1].data;\n    const result = window.confirm(`Are you sure you want to delete ${name}`);\n\n    if (result) {\n      personService.deleteContact(id).then(response => {});\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(SearchBar, {\n    value: newFilter,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Add a new contact\"), /*#__PURE__*/React.createElement(ContactForm, {\n    valueName: newName,\n    onChangeName: handleContactChange,\n    valueNumber: newPhoneNum,\n    onChangeNum: handlePhoneChange,\n    onSubmit: AddNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, contactsToShow.map((person, index) => /*#__PURE__*/React.createElement(PrintNumbers, {\n    contact: person.name,\n    phone: person.number,\n    onClick: handleDeleteButton,\n    key: index,\n    id: person.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }))));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/home/pleq/Documents/learningReact/part6/src/index.js"],"names":["React","useState","useEffect","ReactDOM","personService","PrintNumbers","SearchBar","ContactForm","App","persons","setPersons","getAll","then","response","data","newFilter","setNewFilter","newName","setNewName","newPhoneNum","setNewPhoneNum","newList","setNewList","contactsToShow","searchQuery","searchQueryToUpper","charAt","toUpperCase","substring","filterPersons","filter","el","name","includes","handleContactChange","event","target","value","handlePhoneChange","handleFilterChange","handleDeleteButton","console","log","AddNumber","preventDefault","newContactObj","number","onlyNames","map","nameArr","indexOf","alert","create","concat","removeNumber","deletedId","id","deletedName","parentElement","childNodes","result","window","confirm","deleteContact","person","index","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport PrintNumbers from './components/PrintNumbers'\nimport SearchBar from './components/SearchBar'\nimport ContactForm from './components/ContactForm'\n\nconst App = () =>{\n\n   const [persons, setPersons] = useState([]);\n\n   useEffect(() =>{\n       personService\n       .getAll()\n       .then(response => {\n        setPersons(response.data);\n       })\n   }, [])\n \n    const [ newFilter , setNewFilter] = useState('');\n    const [ newName, setNewName] = useState('');\n    const [ newPhoneNum, setNewPhoneNum] = useState('');\n    const [ newList, setNewList ] = useState([]);\n\n\n    //Search bar//\n\n    let contactsToShow = persons;\n    const searchQuery = newFilter;\n    const searchQueryToUpper = searchQuery.charAt(0).toUpperCase() + searchQuery.substring(1);\n\n    const filterPersons = contactsToShow.filter(el => el.name.includes(searchQueryToUpper));\n    contactsToShow = filterPersons;\n\n    //Search bar //\n\n    const handleContactChange = event =>{\n        setNewName(event.target.value);\n    }\n\n    const handlePhoneChange =  event =>{\n        setNewPhoneNum(event.target.value);\n    }\n\n    const handleFilterChange = event =>{\n        setNewFilter(event.target.value);\n     }\n\n    const handleDeleteButton = (event) =>{\n        setNewList(event.target)\n    }\n    console.log(newList)\n\n    const AddNumber = (event) =>{\n        event.preventDefault();\n\n        const newContactObj = {\n            name: newName,\n            number: newPhoneNum\n        }\n\n        const onlyNames = persons.map(nameArr => nameArr.name);\n\n        if(onlyNames.indexOf(newName) > -1 ){\n            alert (`${newName} is already register`);\n            return\n        } else {\n            personService\n            .create(newContactObj)\n            .then(response =>{\n                setPersons(persons.concat(response.data));\n                setNewName('');\n                setNewPhoneNum('');\n            })\n        }\n    }\n    const removeNumber = () =>{\n        const deletedId = newList.id\n        const deletedName = newList.parentElement.childNodes[1].data;\n        const result = window.confirm(`Are you sure you want to delete ${name}`)\n        if(result){\n            personService\n            .deleteContact(id)\n            .then(response =>{\n            })\n        }\n    }\n\n    return(\n        <div>\n            <h1>Phonebook</h1>\n            <SearchBar value={newFilter} onChange={handleFilterChange}/>\n\n            <h2>Add a new contact</h2>\n            \n            <ContactForm valueName={newName} \n            onChangeName={handleContactChange}\n            valueNumber={newPhoneNum}\n            onChangeNum={handlePhoneChange}\n            onSubmit={AddNumber}/>\n\n            <h2>Numbers</h2>\n            <ul>\n                {contactsToShow.map((person, index)=>\n                <PrintNumbers contact={person.name} phone={person.number} onClick={handleDeleteButton} key={index} id={person.id}/>\n            )}\n            </ul>\n        </div>\n    )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}